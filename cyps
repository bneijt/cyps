#!/usr/bin/runghc
-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
-- 
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
-- 
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.

import System.Directory (getDirectoryContents, doesDirectoryExist)
import System.FilePath ((</>))
import Control.Monad (forM_, filterM)

actions :: [(FilePath -> IO Bool, IO())]
actions = [
    (containsDirectory ".git", putStrLn "git gc")
    ]

containsDirectory :: FilePath -> FilePath -> IO Bool
containsDirectory dirName path = doesDirectoryExist (path </> dirName)

depthFirstDirectories :: FilePath -> IO [FilePath]
depthFirstDirectories directory = do
    contents <- getDirectoryContents directory
    directories <- filterM doesDirectoryExist contents
    return (directory : filter (`notElem` [".", ".."]) directories)

ifApplicableApply :: FilePath -> (FilePath -> IO Bool, IO()) -> IO()
ifApplicableApply path (test, command) = do
    applicable <- test path
    if applicable
        then command
        else return ()

performActions :: [(FilePath -> IO Bool, IO())] -> FilePath -> IO ()
performActions actions path = forM_ actions (ifApplicableApply path)

main = do
    directories <- depthFirstDirectories "."
    forM_ directories (performActions actions) 
    putStrLn $ show (take 10 directories)



